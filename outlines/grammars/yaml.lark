// Adapted from https://github.com/ligurio/lark-grammars/blob/master/lark_grammars/grammars/sqlite.lark
// ligurio/lark-grammars License:
// /*
//  * Copyright (c) 2019-2022 Sergey Bronnikov <estetus@gmail.com>
//  *
//  * Permission to use, copy, modify, and distribute this software for any
//  * purpose with or without fee is hereby granted, provided that the above
//  * copyright notice and this permission notice appear in all copies.
//  *
//  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
//  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
//  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
//  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
//  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
//  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
//  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//  */


start		: yaml

yaml		: data
data		: ( scalar | sequence | mapping )

scalar		: ( number | string | date | BOOLEAN | NIL )
sequence	: ( inline_seq| indented_seq )
mapping		: ( inline_map | indented_map )

inline_seq	: "[" data ( "," data )* "]"
indented_seq	: OPTIONAL_TAB "-" data ( "\n" OPTIONAL_TAB "-" data )*
inline_map	: "{" key ":" data ( "," key ":" data )* "}"
indented_map	: TAB key ":" data ( "\n" TAB key ":" data )*

alpha		: LCASE_LETTER | UCASE_LETTER
alphanum	: alpha | DIGIT
string		: "\"" alphanum*  "\"" | alphanum+
key		: scalar
number		: ("+" | "-")? DIGIT+ ("." DIGIT+)?
date		: DIGIT~4 "-" DIGIT~2 "-" DIGIT~2 ( DIGIT~2 ":" DIGIT~2 ":" DIGIT~2 )?

LCASE_LETTER	: "a".."z"
UCASE_LETTER	: "A".."Z"
DIGIT		: "0".."9"
BOOLEAN		: "true" | "false"
NIL		: "~"
SPACE		: " "
OPTIONAL_TAB	: SPACE*
TAB		: SPACE+
